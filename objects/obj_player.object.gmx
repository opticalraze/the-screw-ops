<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 4;
movespeed = 1;
crouching = false;
sprinting = false;
global.hp = 100;
global.energy = 17;
recently_hit = false;

instance_create(x,y,obj_gui);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.energy -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>recently_hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

//Get player input
if (!global.pause) 
{
    key_right = keyboard_check(ord('D'));
    key_left = -keyboard_check(ord('A'));
    key_jump = keyboard_check_pressed(vk_space);
    key_crouch = keyboard_check(vk_control);
    key_sprint = keyboard_check(vk_shift);
    key_up = keyboard_check(ord('W'));
    key_down = keyboard_check(ord('S'));
    key_enter = keyboard_check(ord('F'));
} 
else 
{
    key_right = false;
    key_left = false;
    key_jump = false;
    key_crouch = false;
    key_sprint = false;
    key_up = false;
    key_down = false;
    key_enter = false;
}

//React to inputs

// Sprint / crouch
if (key_sprint &amp;&amp; !key_crouch) 
    {
    movespeed = 3;
    } 
    else if (key_crouch &amp;&amp; !key_sprint) 
    {
    movespeed = 0;
    } 
    else 
    {
    movespeed = 1;
    }

//Ladder
if (place_meeting(x, y, obj_ladder)) 
{
    vsp = 0;
    grav = 0;
    if (key_up) 
    {
        vsp = -2;
    }
    
    if (key_down) 
    {
        vsp = 2;
    }
} 
else 
{
    grav = 0.2;
}

//Door
// in the obj_door step event

// Look
if (key_up &amp;&amp; !place_meeting(x, y, obj_ladder)) 
{
    key_right = false;
    key_left = false;
}

move = key_left + key_right;
hsp = move * movespeed;

if (vsp &lt; 10) vsp += grav;

if (place_meeting(x,y+1,obj_floor))
{
    vsp = key_jump * -jumpspeed
}

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_floor))
{
    yplus = 0;
    while (place_meeting(x+hsp,y-yplus,obj_floor) &amp;&amp; yplus &lt;= abs(8/*1*hsp*/)) yplus += 1;
    if place_meeting(x+hsp,y-yplus,obj_floor)
    {
        while (!place_meeting(x+sign(hsp),y,obj_floor)) x+=sign(hsp); 
        hsp = 0;
    }
    else
    {
        y -= yplus;
    }
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_floor))
{
    while(!place_meeting(x,y+sign(vsp),obj_floor))
    {
        y += sign(vsp);
    } 
    vsp = 0;
}

y += vsp;

// Animate
if (move!=0) image_xscale = move;
if (place_meeting(x,y+1, obj_floor)) 
{
    if (hsp!=0) sprite_index = spr_player_walk; else sprite_index = spr_player_idle;
} 
else 
{
    if (vsp &lt; 0) sprite_index = spr_player_jump; else sprite_index = spr_player_fall;
}

if (place_meeting(x,y+1, obj_floor)) 
{
    if (key_sprint &amp;&amp; hsp!=0) 
    {
        sprite_index = spr_player_sprint;
    }   
    else if (key_crouch) 
    {
        sprite_index = spr_player_crouch;
    }
} 
else if (place_meeting(x,y, obj_ladder)) 
{
    if (key_up) 
    {
        sprite_index = spr_player_look;
    }
}


if (key_sprint &amp;&amp; global.energy != 0) 
{
    alarm[0] = room_speed*2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_one">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Hit
if !recently_hit 
{
    global.hp -= 20;
    audio_play_sound(snd_pop, 100, false);
    recently_hit = true;
    alarm[0] = 1 * room_speed;
}

if global.hp = 0{
    game_over();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>221</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_previous_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_credits</room>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
